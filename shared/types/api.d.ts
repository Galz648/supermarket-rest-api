/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/": {
    get: operations["AppController_getInfo"];
  };
  "/chains": {
    /** Get all chains */
    get: operations["ChainsController_findAll"];
    /** Create a new chain */
    post: operations["ChainsController_create"];
  };
  "/chains/{id}": {
    /** Get a chain by id */
    get: operations["ChainsController_findOne"];
    /** Update a chain */
    put: operations["ChainsController_update"];
    /** Delete a chain */
    delete: operations["ChainsController_remove"];
  };
  "/chains/{id}/stores": {
    /** Get stores for a specific chain */
    get: operations["ChainsController_findStores"];
  };
  "/items": {
    /** Get all items */
    get: operations["ItemsController_findAll"];
  };
  "/items/search": {
    /** Search for items */
    get: operations["ItemsController_search"];
  };
  "/items/{id}": {
    /** Get an item by id */
    get: operations["ItemsController_findOne"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  AppController_getInfo: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  /** Get all chains */
  ChainsController_findAll: {
    responses: {
      /** @description Return all chains. */
      200: {
        content: never;
      };
    };
  };
  /** Create a new chain */
  ChainsController_create: {
    responses: {
      /** @description The chain has been successfully created. */
      201: {
        content: never;
      };
    };
  };
  /** Get a chain by id */
  ChainsController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Return the chain. */
      200: {
        content: never;
      };
      /** @description Chain not found. */
      404: {
        content: never;
      };
    };
  };
  /** Update a chain */
  ChainsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description The chain has been successfully updated. */
      200: {
        content: never;
      };
      /** @description Chain not found. */
      404: {
        content: never;
      };
    };
  };
  /** Delete a chain */
  ChainsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description The chain has been successfully deleted. */
      204: {
        content: never;
      };
      /** @description Chain not found. */
      404: {
        content: never;
      };
    };
  };
  /** Get stores for a specific chain */
  ChainsController_findStores: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Return stores for the chain. */
      200: {
        content: never;
      };
      /** @description Chain not found. */
      404: {
        content: never;
      };
    };
  };
  /** Get all items */
  ItemsController_findAll: {
    responses: {
      /** @description Return all items. */
      200: {
        content: never;
      };
    };
  };
  /** Search for items */
  ItemsController_search: {
    parameters: {
      query: {
        q: string;
      };
    };
    responses: {
      /** @description Return matching items. */
      200: {
        content: never;
      };
    };
  };
  /** Get an item by id */
  ItemsController_findOne: {
    parameters: {
      path: {
        /** @description Item ID */
        id: string;
      };
    };
    responses: {
      /** @description Return the item. */
      200: {
        content: never;
      };
      /** @description Item not found. */
      404: {
        content: never;
      };
    };
  };
}
